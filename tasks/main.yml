---
# tasks file for ansible-yubikey-mac

- name: Ensure gnupg2 & pinentry-mac are installed
  homebrew:
    name: "{{ item }}"
    state: installed
  loop:
    - gnupg2
    - pinentry-mac

- name: Create directory ~/.gnupg if it does not exist
  file:
    path: "{{ ansible_env.HOME }}/.gnupg"
    state: directory
    owner: "{{ ansible_env.USER }}"
    mode: 0700

- name: create ~/.gnupg/gpg-agent.conf - Intel Mac
  file:
    src: "{{ ansible_env.PWD }}/roles/ansible-yubikey/files/Intel-gpg-agent.conf"
    path: "{{ ansible_env.HOME }}/.gnupg/gpg-agent.conf"
    state: link
    owner: "{{ ansible_env.USER }}"
    mode: 0600
  when: ansible_facts['architecture'] != "arm64" and ansible_facts['os_family'] == "Darwin"

- name: create ~/.gnupg/gpg-agent.conf - Apple Silicon
  file:
    src: "{{ ansible_env.PWD }}/roles/ansible-yubikey/files/M1-gpg-agent.conf"
    path: "{{ ansible_env.HOME }}/.gnupg/gpg-agent.conf"
    state: link
    owner: "{{ ansible_env.USER }}"
    mode: 0600
  when: ansible_facts['architecture'] == "arm64" and ansible_facts['os_family'] == "Darwin"

- name: enable yubikey in ~/.zshrc
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    marker: "# {mark} - enable yubikey - ANSIBLE MANAGED BLOCK"
    create: yes
    owner: "{{ ansible_env.USER }}"
    mode: 0644
    block: |
      export GPG_TTY="$(tty)"
      export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
      gpgconf --launch gpg-agent
